version: '3.7'
services:
  elasticsearch:
    container_name: elasticsearch
    build:
      context: elasticsearch/
      # args:
      #   ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  socat-docker:
    image: binlab/socat
    container_name: socat-docker
    # hostname: socat-docker
    restart: always
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    ports:
     - "2376:2375"
    command: 'tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock'
    networks:
      - elk

  # cadvisor:
  #   image: zcube/cadvisor:latest
  #   container_name: cadvisor   
  #   privileged: true
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   depends_on:
  #     - redis

  # redis:
  #   image: redis:latest
  #   container_name: redis
  #   ports:
  #     - 6379:6379

  logstash:
    build:
      context: logstash/
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5100:5000/tcp"
      - "5100:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      # args:
      #   ELK_VERSION: $ELK_VERSION
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
networks:
  elk:
    driver: bridge
volumes:
  elasticsearch: